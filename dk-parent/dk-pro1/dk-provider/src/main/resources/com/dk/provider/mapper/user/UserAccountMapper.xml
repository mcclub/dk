<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dk.provider.user.mapper.UserAccountMapper">
  <resultMap id="BaseResultMap" type="com.dk.provider.user.entity.UserAccount">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="balance" jdbcType="VARCHAR" property="balance" />
    <result column="roke_amt" jdbcType="VARCHAR" property="rokeAmt" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="states" jdbcType="BIGINT" property="states" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="is_delete" jdbcType="BIGINT" property="isDelete" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, balance, roke_amt, `password`, states, create_time, update_time, create_by, 
    update_by, is_delete
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user_account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dk.provider.user.entity.UserAccount">
    insert into t_user_account (id, user_id, balance, 
      roke_amt, `password`, states, 
      create_time, update_time, create_by, 
      update_by, is_delete)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{balance,jdbcType=VARCHAR}, 
      #{rokeAmt,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{states,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{updateBy,jdbcType=VARCHAR}, #{isDelete,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.dk.provider.user.entity.UserAccount">
    insert into t_user_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="rokeAmt != null">
        roke_amt,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="states != null">
        states,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=VARCHAR},
      </if>
      <if test="rokeAmt != null">
        #{rokeAmt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="states != null">
        #{states,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dk.provider.user.entity.UserAccount">
    update t_user_account
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=VARCHAR},
      </if>
      <if test="rokeAmt != null">
        roke_amt = #{rokeAmt,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="states != null">
        states = #{states,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dk.provider.user.entity.UserAccount">
    update t_user_account
    set user_id = #{userId,jdbcType=BIGINT},
      balance = #{balance,jdbcType=VARCHAR},
      roke_amt = #{rokeAmt,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      states = #{states,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updatePayPassword" parameterType="Map">
  update t_user_account
    set password = #{newPassword}
    ,update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId}
    and states = 1
    and is_delete = 1
  </update>


  <select id="payVerification" parameterType="Map" resultMap="BaseResultMap">
  select
    <include refid="Base_Column_List" />
    from t_user_account
    where user_id = #{userId}
    and password = #{passWord}
    and states = 1
    and is_delete = 1
  </select>

  <select id="queryByUserId" parameterType="Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_user_account
    where user_id = #{userId}
    and states = 1
    and is_delete = 1
  </select>

  <!-- 操作用户账户余额。俗称打钱 -->
  <update id="updBalance" parameterType="map">
    update t_user_account
    set balance = balance + #{balance}
    where user_id = #{userId}
  </update>
</mapper>