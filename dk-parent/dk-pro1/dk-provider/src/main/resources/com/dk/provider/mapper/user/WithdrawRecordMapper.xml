<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dk.provider.user.mapper.WithdrawRecordMapper">
  <resultMap id="BaseResultMap" type="com.dk.provider.user.entity.WithdrawRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="rate" jdbcType="VARCHAR" property="rate" />
    <result column="handling_fee" jdbcType="VARCHAR" property="handlingFee" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="BIGINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, order_no, amount, rate, handling_fee, create_time, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_withdraw_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_withdraw_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dk.provider.user.entity.WithdrawRecord">
    insert into t_withdraw_record (id, user_id, order_no, 
      amount, rate, handling_fee, 
      create_time, `status`)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, 
      #{amount,jdbcType=VARCHAR}, #{rate,jdbcType=VARCHAR}, #{handlingFee,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.dk.provider.user.entity.WithdrawRecord">
    insert into t_withdraw_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="handlingFee != null">
        handling_fee,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=VARCHAR},
      </if>
      <if test="handlingFee != null">
        #{handlingFee,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dk.provider.user.entity.WithdrawRecord">
    update t_withdraw_record
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=VARCHAR},
      </if>
      <if test="handlingFee != null">
        handling_fee = #{handlingFee,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dk.provider.user.entity.WithdrawRecord">
    update t_withdraw_record
    set user_id = #{userId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=VARCHAR},
      rate = #{rate,jdbcType=VARCHAR},
      handling_fee = #{handlingFee,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>